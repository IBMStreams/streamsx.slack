//
// ****************************************************************************
// * Copyright (C) 2017, International Business Machines Corporation          *
// * All rights reserved.                                                     *
// ****************************************************************************
//

/**
 * A service which subscribes to a user-specified topic (in the parameters). 
 * The incoming tuple should contain a jsonString. The jsonString, once converted, 
 * should contain a message attribute with the text contents to send to Slack.
 * 
 * Input JSON Schema:
 * {
 *   message : string
 * }
 */

namespace com.ibm.streamsx.slack.service;

use com.ibm.streamsx.slack::SendSlackMessage ;
use com.ibm.streamsx.slack::Json ;
use com.ibm.streamsx.topology.topic::Subscribe ;

public composite SlackService
{
	param
		expression<rstring> $applicationConfigurationName : getSubmissionTimeValue("applicationConfigurationName", "slackConfiguration");
		expression<rstring> $topic : getSubmissionTimeValue("topic", "streamsx/slack/messages");
		
	graph
		/**
		 * The Subscribe ingests data from the specified topic and outputs it.
		 */
		stream<Json> JsonMessages = Subscribe()
		{
			param
				topic : $topic ;
				streamType : Json ;
		}
		
		/**
		 * The SendSlackMessage sends the message attribute's content to the Slack 
		 * URL specified in the application configuration.
		 */
		() as SendMessage = SendSlackMessage(JsonMessages)
		{
			param
				applicationConfigurationName : $applicationConfigurationName ;
		}
}
